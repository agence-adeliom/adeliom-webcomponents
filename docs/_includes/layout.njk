{% extends "default.njk" %}

{# Find the layout based on the `tag` front matter #}
{% set layout = getLayout('awc-' + page.fileSlug) %}

{% block content %}
  {# Determine the badge variant #}
  {% if layout.status == 'stable' %}
    {% set badgeVariant = 'primary' %}
  {% elseif layout.status == 'experimental' %}
    {% set badgeVariant = 'warning' %}
  {% elseif layout.status == 'planned' %}
    {% set badgeVariant = 'neutral' %}
  {% elseif layout.status == 'deprecated' %}
    {% set badgeVariant = 'danger' %}
  {% else %}
    {% set badgeVariant = 'neutral' %}
  {% endif %}

  {# Header #}
  <header class="component-header">
    <awc-typography type="h1">{{ layout.name | classNameToComponentName }}</awc-typography>

    <div class="component-header__tag">
      <code>&lt;{{ layout.tagName }}&gt; | {{ layout.name }}</code>
    </div>

    <div class="component-header__info">
      <awc-badge variant="neutral" pill>
        Since {{layout.since or '?' }}
      </awc-badge>
      <awc-badge variant="{{ badgeVariant }}" pill style="text-transform: capitalize;">
        {{ layout.status }}
      </awc-badge>
    </div>
  </header>

  <p class="component-summary">
    {% if layout.summary %}
      {{ layout.summary | markdownInline | safe }}
    {% endif %}
  </p>

  {# Markdown content #}
  {{ content | safe }}

  {# Importing #}
  <h2>Importing</h2>
  <p>
    If you're using the autoloader or the traditional loader, you can ignore this section. Otherwise, feel free to use
    any of the following snippets to <a href="/getting-started/installation#cherry-picking">cherry pick</a> this layout.
  </p>

  <awc-tab-group>
    <awc-tab slot="nav" panel="script">Script</awc-tab>
    <awc-tab slot="nav" panel="import">Import</awc-tab>
    <awc-tab slot="nav" panel="bundler">Bundler</awc-tab>
    <awc-tab slot="nav" panel="react">React</awc-tab>

    <awc-tab-panel name="script">
      <p>
        To import this component from <a href="https://www.jsdelivr.com/package/npm/@agence-adeliom/awc">the CDN</a>
        using a script tag:
      </p>
      <pre><code class="language-html">&lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/@agence-adeliom/awc@{{ meta.version }}/{{ meta.cdndir }}/{{ layout.path }}&quot;&gt;&lt;/script&gt;</code></pre>
    </awc-tab-panel>

    <awc-tab-panel name="import">
      <p>
        To import this component from <a href="https://www.jsdelivr.com/package/npm/@agence-adeliom/awc">the CDN</a>
        using a JavaScript import:
      </p>
      <pre><code class="language-js">import 'https://cdn.jsdelivr.net/npm/@agence-adeliom/awc@{{ meta.version }}/{{ meta.cdndir }}/{{ layout.path }}';</code></pre>
    </awc-tab-panel>

    <awc-tab-panel name="bundler">
      <p>
        To import this component using <a href="{{ rootUrl('/getting-started/installation#bundling') }}">a bundler</a>:
      </p>
      <pre><code class="language-js">import '@agence-adeliom/awc/{{ meta.npmdir }}/{{ layout.path }}';</code></pre>
    </awc-tab-panel>

    <awc-tab-panel name="react">
      <p>
        To import this component as a <a href="/frameworks/react">React component</a>:
      </p>
      <pre><code class="language-js">import { {{ layout.name }} } from '@agence-adeliom/awc/{{ meta.npmdir }}/react';</code></pre>
    </awc-tab-panel>
  </awc-tab-group>

  {# Slots #}
  {% if layout.slots.length %}
    <h2>Slots</h2>

    <table>
      <thead>
        <tr>
          <th class="table-name">Name</th>
          <th class="table-description">Description</th>
        </tr>
      </thead>
      <tbody>
        {% for slot in layout.slots %}
          <tr>
            <td class="nowrap">
              {% if slot.name %}
                <code>{{ slot.name }}</code>
              {% else %}
                (default)
              {% endif %}
            </td>
            <td>{{ slot.description | markdownInline | safe }}</td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <p><em>Learn more about <a href="{{ rootUrl('/getting-started/usage#slots') }}">using slots</a>.</em></p>
  {% endif %}

  {# Properties #}
  {% if layout.properties.length %}
    <h2>Properties</h2>

    <table>
      <thead>
        <tr>
          <th class="table-name">Name</th>
          <th class="table-description">Description</th>
          <th class="table-reflects">Reflects</th>
          <th class="table-type">Type</th>
          <th class="table-default">Default</th>
        </tr>
      </thead>
      <tbody>
        {% for prop in layout.properties %}
          <tr>
            <td>
              <code class="nowrap">{{ prop.name }}</code>
              {% if prop.attribute != prop.name %}
                <br>
                <awc-tooltip content="This attribute is different from its property">
                  <small>
                    <code class="nowrap">
                      {{ prop.attribute }}
                    </code>
                  </small>
                </awc-tooltip>
              {% endif %}
            </td>
            <td>
              {{ prop.description | markdownInline | safe }}
            </td>
            <td style="text-align: center;">
              {% if prop.reflects %}
                <awc-icon label="yes" name="check-lg"></awc-icon>
              {% endif %}
            </td>
            <td>
              {% if prop.type.text %}
                <code>{{ prop.type.text | markdownInline | safe }}</code>
              {% else %}
                -
              {% endif %}
            </td>
            <td>
              {% if prop.default %}
                <code>{{ prop.default | markdownInline | safe }}</code>
              {% else %}
                -
              {% endif %}
            </td>
          </tr>
        {% endfor %}
        <tr>
          <td class="nowrap"><code>updateComplete</code></td>
          <td>
            A read-only promise that resolves when the component has
            <a href="/getting-started/usage?#component-rendering-and-updating">finished updating</a>.
          </td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
      </tbody>
    </table>

    <p><em>Learn more about <a href="{{ rootUrl('/getting-started/usage#properties') }}">attributes and properties</a>.</em></p>
  {% endif %}

  {# Events #}
  {% if layout.events.length %}
    <h2>Events</h2>

    <table>
      <thead>
        <tr>
          <th class="table-name" data-flavor="html">Name</th>
          <th class="table-name" data-flavor="react">React Event</th>
          <th class="table-description">Description</th>
          <th class="table-event-detail">Event Detail</th>
        </tr>
      </thead>
      <tbody>
        {% for event in layout.events %}
          <tr>
            <td data-flavor="html"><code class="nowrap">{{ event.name }}</code></td>
            <td data-flavor="react"><code class="nowrap">{{ event.reactName }}</code></td>
            <td>{{ event.description | markdownInline | safe }}</td>
            <td>
              {% if event.type.text %}
                <code>{{ event.type.text }}</code>
              {% else %}
                -
              {% endif %}
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <p><em>Learn more about <a href="{{ rootUrl('/getting-started/usage#events') }}">events</a>.</em></p>
  {% endif %}

  {# Methods #}
  {% if layout.methods.length %}
    <h2>Methods</h2>

    <table>
      <thead>
        <tr>
          <th class="table-name">Name</th>
          <th class="table-description">Description</th>
          <th class="table-arguments">Arguments</th>
        </tr>
      </thead>
      <tbody>
        {% for method in layout.methods %}
          <tr>
            <td class="nowrap"><code>{{ method.name }}()</code></td>
            <td>{{ method.description | markdownInline | safe }}</td>
            <td>
              {% if method.parameters.length %}
                <code>
                  {% for param in method.parameters %}
                    {{ param.name }}: {{ param.type.text }}{% if not loop.last %},{% endif %}
                  {% endfor %}
                </code>
              {% else %}
                -
              {% endif %}
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <p><em>Learn more about <a href="{{ rootUrl('/getting-started/usage#methods') }}">methods</a>.</em></p>
  {% endif %}

  {# Custom Properties #}
  {% if layout.cssProperties.length %}
    <h2>Custom Properties</h2>

    <table>
      <thead>
        <tr>
          <th class="table-name">Name</th>
          <th class="table-description">Description</th>
          <th class="table-default">Default</th>
        </tr>
      </thead>
      <tbody>
        {% for cssProperty in layout.cssProperties %}
          <tr>
            <td class="nowrap"><code>{{ cssProperty.name }}</code></td>
            <td>{{ cssProperty.description | markdownInline | safe }}</td>
            <td>{{ cssProperty.default }}</td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <p><em>Learn more about <a href="{{ rootUrl('/getting-started/customizing#custom-properties') }}">customizing CSS custom properties</a>.</em></p>
  {% endif %}

  {# CSS Parts #}
  {% if layout.cssParts.length %}
    <h2>Parts</h2>

    <table>
      <thead>
        <tr>
          <th class="table-name">Name</th>
          <th class="table-description">Description</th>
        </tr>
      </thead>
      <tbody>
        {% for cssPart in layout.cssParts %}
          <tr>
            <td class="nowrap"><code>{{ cssPart.name }}</code></td>
            <td>{{ cssPart.description | markdownInline | safe }}</td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <p><em>Learn more about <a href="{{ rootUrl('/getting-started/customizing#component-parts') }}">customizing CSS parts</a>.</em></p>
  {% endif %}

  {# Animations #}
  {% if layout.animations.length %}
    <h2>Animations</h2>

    <table>
      <thead>
        <tr>
          <th class="table-name">Name</th>
          <th class="table-description">Description</th>
        </tr>
      </thead>
      <tbody>
        {% for animation in layout.animations %}
          <tr>
            <td class="nowrap"><code>{{ animation.name }}</code></td>
            <td>{{ animation.description | markdownInline | safe }}</td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <p><em>Learn more about <a href="{{ rootUrl('/getting-started/customizing#animations') }}">customizing animations</a>.</em></p>
  {% endif %}

  {# Dependencies #}
  {% if layout.dependencies.length %}
    <h2>Dependencies</h2>

    <p>This component automatically imports the following dependencies.</p>

    <ul>
      {% for dependency in layout.dependencies %}
        <li><code>&lt;{{ dependency }}&gt;</code></li>
      {% endfor %}
    </ul>
  {% endif %}
{% endblock %}
